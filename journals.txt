Monday, May 19 (hours worked: )
Morning:I worked through a Belcan provided intermediate C# course. In the morning I learned about inheritance, polymorphism, interfaces, and reference fundamentals in C#. 
Each of these sections had a step by step interactive learning/coding portion. They also all had a separate lab to practice applying the skills just learned. 
Afternoon: After lunch I continued the coding course. I learned about the C# object class, the immutability of strings, enumerations, and generics in C#. I did both the interactive coding portions and independent labs.
I finished the day by going through the existing client codebase I was sent and trying to read through the C# template files and track the flow of execution. 

Tuesday, May 20 (hours worked: )
Morning: Talk about C# 
Afternoon: Talk about C# 

Wednesday, May 21 (hours worked: )
Morning: Mark and I had a conversation about C++ serialization/deserialization protocols and different schemas. 
Afternoon: Talk about C++

Thursday, May 22 (hours worked: )
Morning: I read all documentation in the FlatBuffers Docs. I learned about the schema, implementation, and supported languages. I also watched a few videos from Google about
their Flatbuffers
Afternoon: I read all the documentation in the Protocol Buffers Docs. I practiced, on paper, taking a .proto schema to a .fbs schema. 
Also practices taking a .fbs schema to a .proto schema. I learned about the schema, implementation, and supported languages. 

Friday, May 23 (hours worked: )
Morning: learned about and practiced using gRPC and protobufs by using a few simple examples. Reviewed a repository on C++ serialization protocols that compared performance and showed a simple how tos. This was very helpful
as it let me set up and practice generating C++ serialization/deserialization code from these provided schemas. 
Afternoon: Did a codeacademy intermediate git course. I chose to do the intermediate after taking Belcans benchmark test where it provides a score and recommendation. I learned about cherry-picking, restoring files, and rebasing. I practiced
in a faux repo I made. 

Monday, May 26 (hours worked: 0)
Morning: Memorial Day
Afternoon: Memorial Day 

Tuesday, May 27 (hours worked: 8 )
Morning: I finished the intermediate C# codeacademy course.I Spoke with Mark in the morning and he got me set up on the lab laptop so I could use Visual Studio. I began writing a .proto parser. 
The parser takes in a proto schema file and creates a C++ object of that file with structs for enums, messages, fields, and vectors. I tried to get it running in visual studio but it had some bugs. 
Afternoon: I watched a few quick videos on using Visual Studio as I've always using JetBrains IDEs or the terminal. I practiced debugging using built in visual studio tools. I was able to finish the proto parser. 
I commented it out and sent it to Mark for review. I finished the day reviewing how flatc works with flatbuffer schemas. 

Wednesday, May 28 (hours worked: 8 )
Morning: I added to my .proto parser so it can handle nested messages. I did this by modifying the messages struct so it held the bool nested and added a vector of other message structs called nestedMessages.
In the parseMessages function, I recursively called parseMessages to maintain message hierarchy. I read some C++ documentation to learn about unordered maps and string builders. I also communicated with Mark and 
reviewed feedback from previous day's proto parser. 
Afternoon: I reviewed the resources Mark sent me. I installed Visual Studio Community 2019 on the lab laptop. I worked on writing some C++ code that takes a flatbuffer reflection schema and turns it into protobuf descriptor data containing:
fb reflection enums -> pb EnumDescriptorProto structs 
fb reflection tables -> pb DescriptorProto structs aka messages 
fb reflection field -> pb FieldDescriptorProto structs
fb reflection vectors -> pb repeated fields
fb BaseType -> pb FieldDescriptorProto::Type
I then sent this code to Mark for review and practiced manipulating schemas using C# for the remainder of the day. 

Thursday, May 29 (hours worked: 8)
Morning: I generated C# accessors from .fbs files using flatc. I also made .bfbs files and binary files from these .fbs files using flatc.
I added this all to a C# visual studio project path. I then wrote C# code to traverse and print out the .fbs elements from these generated .bfbs files.
I also generated the C# code from the reflection.fbs github using flatc. 
Had quite a nasty bug trying to get the BaseType from Type but eventually figured that out and was able to get BaseType from Type. 
Afternoon: Instead of just traversing the .bfbs files, I created C# data types to hold equal .proto objects. 
I then formatted these .proto objects into eqivalent files and wrote them to a protos directory. 
This was all done in a large main method so I added in abstraction by making a FBStoProto class and 
corresponding functions for reading the passed .bfbs files, mapping to enums, mapping to messages, unions to one-ofs, and so on. 
I finished the day by testing some edge cases to ensure proto output was still correct. 



Afternoon:

Friday, May 30 (hours worked: )
Morning: Fix nested stuff



Afternoon:



Comments:

We get holiday pay here as full time Co-Ops. Yayyyyyy!! 
